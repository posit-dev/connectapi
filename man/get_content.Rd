% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{get_content}
\alias{get_content}
\title{Get information about content on the Posit Connect server}
\usage{
get_content(src, guid = NULL, owner_guid = NULL, name = NULL, ..., .p = NULL)
}
\arguments{
\item{src}{A Connect object}

\item{guid}{The guid for a particular content item}

\item{owner_guid}{The unique identifier of the user who owns the content}

\item{name}{The content name specified when the content was created}

\item{...}{Extra arguments. Currently not used.}

\item{.p}{Optional. A predicate function, passed as-is to \code{purrr::keep()}
before turning the response into a tibble. Can be useful for performance.}
}
\value{
A tibble with the following columns:
\itemize{
\item \code{guid}: The unique identifier of this content item.
\item \code{name}: A simple, URL-friendly identifier. Allows alpha-numeric
characters, hyphens ("-"), and underscores ("_").
\item \code{title}: The title of this content.
\item \code{description}: A rich description of this content
\item \code{access_type}: Access type describes how this content manages its
viewers. It may have a value of \code{all}, \code{logged_in} or \code{acl}.
The value \code{all} is the most permissive; any visitor to Posit
Connect will be able to view this content. The value \code{logged_in}
indicates that all Posit Connect accounts may view the content. The
\code{acl} value lets specifically enumerated users and groups view the
content. Users configured as collaborators may always view content.
\item \code{locked}: Whether or not the content is locked.
\item \code{locked_message}: A custom message that is displayed by the content
item when locked. It is possible to format this message using Markdown.
\item \code{connection_timeout}: Maximum number of seconds allowed without data
sent or received across a client connection. A value of 0 means
connections will never time-out (not recommended). When null, the
default \code{Scheduler.ConnectionTimeout} is used. Applies only to content
types that are executed on demand.
\item \code{read_timeout}: Maximum number of seconds allowed without data received
from a client connection. A value of 0 means a lack of client (browser)
interaction never causes the connection to close. When null, the default
\code{Scheduler.ReadTimeout} is used. Applies only to content types that are
executed on demand.
\item \code{init_timeout}: The maximum number of seconds allowed for an interactive
application to start. Posit Connect must be able to connect
to a newly launched Shiny application, for example, before this threshold
has elapsed. When null, the default \code{Scheduler.InitTimeout} is
used. Applies only to content types that are executed on demand.
\item \code{idle_timeout}: The maximum number of seconds a worker process
for an interactive application to remain alive after it goes idle (no
active connections). When null, the default \code{Scheduler.IdleTimeout}
is used. Applies only to content types that are executed on demand.
\item \code{max_processes}: Specifies the total number of concurrent processes
allowed for a single interactive application. When null, the
default \code{Scheduler.MaxProcesses} setting is used. Applies only to
content types that are executed on demand.
\item \code{min_processes}: Specifies the minimum number of concurrent
processes allowed for a single interactive application. When null, the
default \code{Scheduler.MinProcesses} is used. Applies only to content types
that are executed on demand.
\item \code{max_conns_per_process}: Specifies the maximum number of
client connections allowed to an individual process. Incoming connections
which will exceed this limit are routed to a new process or rejected.
When null, the default \code{Scheduler.MaxConnsPerProcess} is used. Applies
only to content types that are executed on demand.
\item \code{load_factor}: Controls how aggressively new processes are spawned.
When null, the default \code{Scheduler.LoadFactor} is used. Applies only to
content types that are executed on demand.
\item \code{memory_request}: The minimum amount of RAM this content needs when
executing or rendering, expressed in bytes. When null, the default
\code{Scheduler.MemoryRequest} is used. Used for off-host execution.
\item \code{memory_limit}: The maximum amount of RAM this content will be allowed
to consume when executing or rendering, expressed in bytes. If the
process tries to use more memory than allowed, it will be terminated.
When null, the default \code{Scheduler.MemoryLimit} is used. Used for
off-host execution.
\item \code{cpu_request}: The minimum amount of compute power this content needs
when executing or rendering, expressed in CPU Units, where 1.0 unit is
equivalent to 1 physical or virtual core. Fractional values are allowed.
When null, the default \code{Scheduler.CPURequest} is used. Used for off-host
execution.
\item \code{cpu_limit}: The maximum amount of compute power this content will be
allowed to consume when executing or rendering, expressed in CPU Units.
If the process tries to use more CPU than allowed, it will be throttled.
When null, the default \code{Scheduler.CPULimit} is used. Used for off-host
execution.
\item \code{amd_gpu_limit}: The number of AMD GPUs that will be allocated by
Kubernetes to run this content. When null, the default
\code{Scheduler.AMDGPULimit} is used. Used for off-host execution.
\item \code{nvidia_gpu_limit}: The number of NVIDIA GPUs that will be allocated by
Kubernetes to run this content. When null, the default
\code{Scheduler.NvidiaGPULimit} is used. Used for off-host execution.
\item \code{service_account_name}: The name of the Kubernetes service account that
is used to run a particular piece of content. It must adhere to valid
Kubernetes service account naming rules. Only administrators and
publishers can view this value. Only administrators can set or change
this value.
\item \code{default_image_name}: The default image that will be used when none is
defined by the bundle's manifest. If either environment.identifier or
environment.image is specified in the bundle's manifest.json, then the
settings in the manifest are used and the content-level default settings
will be ignored. A null value is returned when the client does not have
sufficient rights to see this information.
\item \code{default_environment_guid}: The default execution environment that will
be used when none is defined by the bundle's manifest. If either
environment.identifier or environment.image is specified in the bundle's
manifest.json, then the settings in the manifest are used and the
content-level default settings will be ignored. A null value is returned
when the client does not have sufficient rights to see this information.
\item \code{created_time}: The timestamp (RFC3339) indicating when this
content was created.
\item \code{last_deployed_time}: The timestamp (RFC3339) indicating when
this content last had a successful bundle deployment performed.
\item \code{bundle_id}: The identifier for the active deployment bundle.
Automatically assigned upon the successful deployment of that bundle.
\item \code{app_mode}: The runtime model for this content. Has a value
of \code{unknown} before data is deployed to this item. Automatically assigned
upon the first successful bundle deployment. Allowed: \code{api},
\code{jupyter-static}, \code{jupyter-voila}, \code{python-api}, \code{python-bokeh},
\code{python-dash}, \code{python-fastapi}, \code{python-gradio}, \code{python-shiny},
\code{python-streamlit}, \code{quarto-shiny}, \code{quarto-static}, \code{rmd-shiny},
\code{rmd-static}, \code{shiny}, \code{static}, \code{tensorflow-saved-model}, \code{unknown}.
\item \code{content_category}: Describes the specialization of the content
runtime model. Automatically assigned upon the first successful bundle
deployment.
\item \code{parameterized}: True when R Markdown rendered content
allows parameter configuration. Automatically assigned upon the first
successful bundle deployment. Applies only to content with an app_mode
of rmd-static.
\item \code{environment_guid}: The GUID of the execution environment used to run
this content. Content running locally on the same server as Connect will
have a null value. A null value is also returned when the client does
not have sufficient rights to see this information.
\item \code{cluster_name}: The location where this content runs. Content running
on the same server as Connect will have either a null value or the
string "Local". Gives the name of the cluster when run external to the
Connect host. A null value is returned when the client does not have
sufficient rights to see this information.
\item \code{image_name}: The name of the container image used to run this content
in containerized environments such as Kubernetes. Content running
locally on the same server as Connect will have either a null value or
the string "Local". A null value is returned when the client does not
have sufficient rights to see this information.
\item \code{r_version}: The version of the R interpreter associated
with this content. The value null represents that an R interpreter is
not used by this content or that the R package environment has not been
successfully restored. Automatically assigned upon the successful
deployment of a bundle.
\item \code{py_version}: The version of the Python interpreter
associated with this content. The value null represents that a Python
interpreter is not used by this content or that the Python package
environment has not been successfully restored. Automatically assigned
upon the successful deployment of a bundle.
\item \code{quarto_version}: The version of Quarto associated with this content.
A null value represents that Quarto is not used by this content, that
the content has not been prepared for execution, or that the client does
not have sufficient rights to see this information. Automatically
assigned upon the successful deployment of a bundle.
\item \code{r_environment_management}: Indicates whether or not Connect is
managing an R environment and has installed the required packages for
this content. A null value represents that R is not used by this content,
that the content has not been prepared for execution, or that the client
does not have sufficient rights to see this information. Automatically
assigned upon the successful deployment of a bundle.
\item \code{default_r_environment_management}: Indicates whether or not Connect
should create and manage an R environment (installing required packages)
for this content. When null, Connect makes this determination based on
the server configuration. A null value is also returned when the client
does not have sufficient rights to see this information. This value is
ignored if the server setting
Applications.DefaultEnvironmentManagementSelection is disabled.
\item \code{py_environment_management}: Indicates whether or not Connect is
managing a Python environment and has installed the required packages
for this content. A null value represents that Python is not used by
this content, that the content has not been prepared for execution, or
that the client does not have sufficient rights to see this information.
Automatically assigned upon the successful deployment of a bundle.
\item \code{default_py_environment_management}: Indicates whether or not Connect
should create and manage a Python environment (installing required
packages) for this content. When null, Connect makes this determination
based on the server configuration. A null value is also returned when
the client does not have sufficient rights to see this information.
This value is ignored if the server setting
Applications.DefaultEnvironmentManagementSelection is disabled.
\item \code{run_as}: The UNIX user that executes this content. When null, the
default Applications.RunAs is used. Applies only to executable content
types - not static. Only administrators can change this value. If
Applications.RunAsEnabled = false, this value will be ignored when
executing content.
\item \code{run_as_current_user}: Indicates that Connect should run processes for
this content item under the Unix account of the user who visits it.
Content accessed anonymously will continue to run as the specified
run_as user. Connect must be configured to use PAM authentication with
the server settings Applications.RunAsCurrentUser = true and
PAM.ForwardPassword = true. This setting has no effect for other
authentication types. This setting only applies to application content
types (Shiny, Dash, Streamlit, and Bokeh). Only administrators can
change this value.
\item \code{owner_guid}: The unique identifier for the owner
\item \code{content_url}: The URL associated with this content. Computed
from the GUID for this content.
\item \code{dashboard_url}: The URL within the Connect dashboard where
this content can be configured. Computed from the GUID for this content.
\item \code{vanity_url}: The vanity URL associated with this content item.
\item \code{app_role}: The relationship of the accessing user to this
content. A value of owner is returned for the content owner. editor
indicates a collaborator. The viewer value is given to users who are
permitted to view the content. A none role is returned for
administrators who cannot view the content but are permitted to view
its configuration. Computed at the time of the request.
\item \code{id}: The internal numeric identifier of this content item.
\item \code{owner}: Basic details about the owner of this content item. Each entry
is a list with the following fields:
\itemize{
\item \code{guid}: The user's GUID, or unique identifier, in UUID RFC4122 format.
\item \code{username}: The user's username.
\item \code{first_name}: The user's first name.
\item \code{last_name}: The user's last name.
}
\item \code{public_content_status}: Validation status of public interactive content.
When validation is required by licensing, this will be one of "ok",
"warning", or "restricted". If licensing does not require validation, it
will be "unrestricted"; if licensing does not allow public interactive
content, it will be "unlicensed". If the app has not been made public,
but public content is permitted, it will be "none".
\item \code{tags}: Tags associated with this content item. Each entry is a list
with the following fields:
\itemize{
\item \code{id}: The identifier for the tag.
\item \code{name}: The name of the tag.
\item \code{parent_id}: The identifier for the parent tag. Null if the tag is a
top-level tag.
\item \code{created_time}: The timestamp (RFC3339) indicating when the tag was
created.
\item \code{updated_time}: The timestamp (RFC3339) indicating when the tag was
last updated.
}
}
}
\description{
Get information about content on the Posit Connect server
}
\details{
Please see https://docs.posit.co/connect/api/#get-/v1/content for more
information.
}
\examples{
\dontrun{
library(connectapi)
client <- connect()

get_content(client)
}

}
